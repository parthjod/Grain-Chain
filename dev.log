[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): server.ts src\**\*[39m
[33m[nodemon] watching extensions: ts,tsx,js,jsx[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
> Ready on http://0.0.0.0:3000
> Socket.IO server running at ws://0.0.0.0:3000/api/socketio
 â—‹ Compiling /retailer ...
 âœ“ Compiled /retailer in 11.5s (936 modules)
 GET /retailer 200 in 14326ms
 â—‹ Compiling /api/produce/retail ...
 âœ“ Compiled /api/produce/retail in 2.3s (943 modules)
prisma:query SELECT `main`.`produces`.`id`, `main`.`produces`.`produceId`, `main`.`produces`.`farmer`, `main`.`produces`.`farmerName`, `main`.`produces`.`produceType`, `main`.`produces`.`quantity`, `main`.`produces`.`unit`, `main`.`produces`.`origin`, `main`.`produces`.`harvestDate`, `main`.`produces`.`blockchainHash`, `main`.`produces`.`status`, `main`.`produces`.`currentHolder`, `main`.`produces`.`price`, `main`.`produces`.`isSold`, `main`.`produces`.`qrCode`, `main`.`produces`.`createdAt`, `main`.`produces`.`updatedAt` FROM `main`.`produces` WHERE (`main`.`produces`.`produceId` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`produces` SET `status` = ?, `currentHolder` = ?, `price` = ?, `isSold` = ?, `updatedAt` = ? WHERE (`main`.`produces`.`produceId` = ? AND 1=1) RETURNING `id` AS `id`, `produceId` AS `produceId`, `farmer` AS `farmer`, `farmerName` AS `farmerName`, `produceType` AS `produceType`, `quantity` AS `quantity`, `unit` AS `unit`, `origin` AS `origin`, `harvestDate` AS `harvestDate`, `blockchainHash` AS `blockchainHash`, `status` AS `status`, `currentHolder` AS `currentHolder`, `price` AS `price`, `isSold` AS `isSold`, `qrCode` AS `qrCode`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`produce_history` (`id`, `produceId`, `actor`, `actorName`, `action`, `details`, `timestamp`, `location`) VALUES (?,?,?,?,?,?,?,?) RETURNING `id` AS `id`, `produceId` AS `produceId`, `actor` AS `actor`, `actorName` AS `actorName`, `action` AS `action`, `details` AS `details`, `timestamp` AS `timestamp`, `location` AS `location`
 POST /api/produce/retail 200 in 3116ms
 â—‹ Compiling /retailer/success ...
 âœ“ Compiled /retailer/success in 4.3s (1064 modules)
 GET /retailer/success 200 in 4682ms
 GET /retailer/success 200 in 65ms
 â—‹ Compiling /api/produce/[id] ...
 âœ“ Compiled /api/produce/[id] in 2.5s (1052 modules)
Error: Route "/api/produce/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (src\app\api\produce\[id]\route.ts:9:12)
   7 | ) {
   8 |   try {
>  9 |     const { id } = params;
     |            ^
  10 |
  11 |     // Get produce details
  12 |     const produce = await db.produce.findUnique({
prisma:query SELECT `main`.`produces`.`id`, `main`.`produces`.`produceId`, `main`.`produces`.`farmer`, `main`.`produces`.`farmerName`, `main`.`produces`.`produceType`, `main`.`produces`.`quantity`, `main`.`produces`.`unit`, `main`.`produces`.`origin`, `main`.`produces`.`harvestDate`, `main`.`produces`.`blockchainHash`, `main`.`produces`.`status`, `main`.`produces`.`currentHolder`, `main`.`produces`.`price`, `main`.`produces`.`isSold`, `main`.`produces`.`qrCode`, `main`.`produces`.`createdAt`, `main`.`produces`.`updatedAt` FROM `main`.`produces` WHERE (`main`.`produces`.`produceId` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`produce_history`.`id`, `main`.`produce_history`.`produceId`, `main`.`produce_history`.`actor`, `main`.`produce_history`.`actorName`, `main`.`produce_history`.`action`, `main`.`produce_history`.`details`, `main`.`produce_history`.`timestamp`, `main`.`produce_history`.`location` FROM `main`.`produce_history` WHERE `main`.`produce_history`.`produceId` IN (?) ORDER BY `main`.`produce_history`.`timestamp` ASC LIMIT ? OFFSET ?
 GET /api/produce/CORN-2025-009 200 in 7064ms
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
> Ready on http://0.0.0.0:3000
> Socket.IO server running at ws://0.0.0.0:3000/api/socketio
 â—‹ Compiling / ...
 âœ“ Compiled / in 9s (812 modules)
 GET / 200 in 10802ms
 â—‹ Compiling /consumer ...
 âœ“ Compiled /consumer in 3.1s (826 modules)
 GET /consumer 200 in 3597ms
 GET /consumer 200 in 565ms
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
