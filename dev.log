[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): server.ts src\**\*[39m
[33m[nodemon] watching extensions: ts,tsx,js,jsx[39m
[32m[nodemon] starting `npx tsx server.ts`[39m
> Ready on http://0.0.0.0:3000
> Socket.IO server running at ws://0.0.0.0:3000/api/socketio
 ‚óã Compiling /middleware ...
 ‚úì Compiled /middleware in 821ms (130 modules)
 ‚óã Compiling /[locale]/consumer ...
 ‚úì Compiled /[locale]/consumer in 14.9s (1129 modules)
Error: Route "/[locale]/consumer" used `headers().get('X-NEXT-INTL-LOCALE')`. `headers()` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at RootLayout (src\app\layout.tsx:49:32)
  47 |   let messages;
  48 |   try {
> 49 |     messages = await getMessages();
     |                                ^
  50 |   } catch (error) {
  51 |     console.error(`Failed to load messages for locale ${locale}:`, error);
  52 |     messages = {}; // Fallback to empty messages
Messages loaded in layout: {
  Index: {
    title: 'GrainChain',
    subtitle: 'Blockchain-powered supply chain transparency for agricultural products',
    description: 'Track your food from farm to table with complete transparency and security',
    farmerCard: {
      title: 'üåæ Farmer',
      description: 'Register your produce on the blockchain',
      content: 'Register new produce, generate QR codes, and start the traceability journey',
      button: 'Enter Farmer Portal'
    },
    distributorCard: {
      title: 'üöö Distributor',
      description: 'Update logistics and track shipments',
      content: 'Update shipment status, track logistics, and maintain chain of custody',
      button: 'Enter Distributor Portal'
    },
    retailerCard: {
      title: 'üè™ Retailer',
      description: 'Confirm arrival and set pricing',
      content: 'Confirm product arrival, assess quality, and set retail prices',
      button: 'Enter Retailer Portal'
    },
    consumerCard: {
      title: 'üë• Consumer',
      description: 'Trace product journey and verify authenticity',
      content: 'Scan QR codes to trace the complete journey of your food products',
      button: 'Enter Consumer Portal'
    },
    howItWorks: {
      title: 'How It Works',
      description: 'The complete GrainChain supply chain process',
      steps: [Object]
    },
    keyFeatures: {
      title: 'Key Features',
      description: 'Why choose GrainChain for supply chain transparency',
      features: [Object]
    },
    benefits: {
      title: 'Benefits for Everyone',
      farmers: [Object],
      distributors: [Object],
      retailers: [Object],
      consumers: [Object]
    },
    footer: { rights: 'All rights reserved.' }
  },
  Farmer: {
    title: 'Farmer Portal - Register Your Produce',
    register: 'Register New Produce',
    registerDescription: 'Enter the details of your produce to register it on the blockchain',
    produceId: 'Produce ID',
    produceIdPlaceholder: 'e.g., GRAIN-2024-001',
    farmerName: 'Farmer Name',
    farmerNamePlaceholder: 'Your full name',
    produceType: 'Produce Type',
    selectProduceType: 'Select produce type',
    wheat: 'Wheat',
    rice: 'Rice',
    corn: 'Corn',
    soybeans: 'Soybeans',
    barley: 'Barley',
    oats: 'Oats',
    quantity: 'Quantity',
    quantityPlaceholder: 'e.g., 100',
    unit: 'Unit',
    selectUnit: 'Select unit',
    kg: 'Kilograms (kg)',
    tons: 'Tons',
    bushels: 'Bushels',
    pounds: 'Pounds (lbs)',
    harvestDate: 'Harvest Date',
    origin: 'Origin/Farm Location',
    originPlaceholder: 'Farm address or location',
    walletAddress: 'Wallet Address',
    walletAddressPlaceholder: '0x...',
    registering: 'Registering...',
    registerProduce: 'Register Produce',
    liveQRCode: 'Live QR Code Preview',
    liveQRCodeDescription: 'QR code updates in real-time as you fill the form',
    produceIdLabel: 'Produce ID:',
    notSet: 'Not set',
    typeLabel: 'Type:',
    quantityLabel: 'Quantity:',
    success: 'Success',
    successMessage: 'Produce registered successfully! QR code generated.',
    error: 'Error',
    errorMessage: 'Failed to register produce'
  },
  FarmerSuccess: {
    title: 'Registration Successful!',
    produceRegistered: 'Produce Registered',
    produceRegisteredDescription: 'Your produce has been successfully registered on the blockchain',
    produceIdLabel: 'Produce ID: {produceId}',
    saveQRCode: 'Save this QR code and attach it to your produce packaging',
    produceQRCode: 'Produce QR code',
    downloadQRCode: 'Download QR Code',
    registerAnother: 'Register Another',
    qrCodeInfo: 'This QR code contains all the information about your produce. Distributors, retailers, and consumers can scan it to verify the authenticity and track the journey of your produce through the supply chain.'
  },
  Distributor: {
    title: 'Distributor Portal - Update Logistics',
    updateStatus: 'Update Produce Status',
    updateStatusDescription: 'Update the logistics status and location of produce in transit',
    produceId: 'Produce ID',
    produceIdPlaceholder: 'e.g., GRAIN-2024-001',
    distributorName: 'Distributor Name',
    distributorNamePlaceholder: 'Your company name',
    currentStatus: 'Current Status',
    selectCurrentStatus: 'Select current status',
    inTransit: 'In Transit',
    atWarehouse: 'At Warehouse',
    outForDelivery: 'Out for Delivery',
    delayed: 'Delayed',
    customsClearance: 'Customs Clearance',
    walletAddress: 'Wallet Address',
    walletAddressPlaceholder: '0x...',
    currentLocation: 'Current Location',
    currentLocationPlaceholder: 'Current location or facility address',
    additionalNotes: 'Additional Notes',
    additionalNotesPlaceholder: 'Any additional information about the shipment',
    updating: 'Updating...',
    update: 'Update Status',
    quickStatusReference: 'Quick Status Reference',
    inTransitDescription: 'Produce is being transported',
    atWarehouseDescription: 'Produce is stored at facility',
    outForDeliveryDescription: 'En route to final destination',
    delayedDescription: 'Shipment is delayed',
    success: 'Success',
    successMessage: 'Produce status updated successfully!',
    error: 'Error',
    errorMessage: 'Failed to update produce status'
  },
  DistributorSuccess: {
    title: 'Status Update Successful!',
    logisticsUpdated: 'Logistics Updated',
    logisticsUpdatedDescription: 'The produce status has been successfully updated on the blockchain',
    produceIdLabel: 'Produce ID: {produceId}',
    currentStatus: 'Current Status',
    location: 'Location',
    updateTime: 'Update Time',
    blockchainConfirmation: 'Blockchain Confirmation',
    blockchainConfirmationDescription: 'This status update has been permanently recorded on the blockchain and cannot be altered. All stakeholders can now verify the current location and status of this produce.',
    updateAnother: 'Update Another',
    backToHome: 'Back to Home',
    nextSteps: 'Next Steps',
    nextStepsItems: [
      'Continue monitoring the produce as it moves through the supply chain',
      'Update the status whenever the produce reaches a new location',
      'Notify the next stakeholder when the produce is ready for handover',
      'All updates are transparent and verifiable on the blockchain'
    ]
  },
  Retailer: {
    title: 'Retailer Portal - Confirm Arrival & Set Price',
    confirmArrival: 'Confirm Produce Arrival',
    confirmArrivalDescription: 'Confirm the arrival of produce and set the retail price',
    produceId: 'Produce ID',
    produceIdPlaceholder: 'e.g., GRAIN-2024-001',
    retailerName: 'Retailer Name',
    retailerNamePlaceholder: 'Your store name',
    retailPrice: 'Retail Price ($)',
    retailPricePlaceholder: 'e.g., 4.99',
    qualityAssessment: 'Quality Assessment',
    selectQuality: 'Select quality',
    excellent: 'Excellent',
    good: 'Good',
    fair: 'Fair',
    poor: 'Poor',
    condition: 'Condition',
    selectCondition: 'Select condition',
    fresh: 'Fresh',
    acceptable: 'Acceptable',
    damaged: 'Damaged',
    walletAddress: 'Wallet Address',
    walletAddressPlaceholder: '0x...',
    shelfLocation: 'Shelf Location',
    shelfLocationPlaceholder: 'e.g., Aisle 3, Section B, Shelf 2',
    priceSettingGuidelines: 'Price Setting Guidelines',
    priceSettingGuidelinesItems: [
      'Consider the quality and condition of the produce',
      'Factor in transportation and storage costs',
      'Research current market prices for similar products',
      'Set a competitive but profitable price'
    ],
    confirming: 'Confirming...',
    confirmAndSetPrice: 'Confirm Arrival & Set Price',
    qualityAssessmentGuide: 'Quality Assessment Guide',
    excellentDescription: 'Premium quality, no defects',
    goodDescription: 'Minor cosmetic issues',
    fairDescription: 'Noticeable defects',
    poorDescription: 'Major defects, lower quality',
    success: 'Success',
    successMessage: 'Produce arrival confirmed and price set!',
    error: 'Error',
    errorMessage: 'Failed to confirm arrival',
    grainChain: 'Grain Chain'
  },
  RetailerSuccess: {
    title: 'üéâ Complete Journey - Ready for Consumers!',
    finalJourneyQRCode: 'üéØ Final Journey QR Code',
    finalJourneyQRCodeDescription: 'Complete supply chain data in one scan',
    produceJourneyComplete: '‚úÖ Produce Journey Complete',
    produceJourneyCompleteDescription: 'The produce has successfully traveled through the entire supply chain',
    produceIdLabel: 'üÜî {produceId}',
    productLabel: 'üåæ Product:',
    quantityLabel: 'üìè Quantity:',
    farmerLabel: 'üë®‚Äçüåæ Farmer:',
    originLabel: 'üìç Origin:',
    priceLabel: 'üí∞ Price:',
    notSet: 'Not set',
    statusLabel: 'üìä Status:',
    soldLabel: '‚úÖ Sold:',
    yes: 'Yes',
    no: 'No',
    currentHolderLabel: 'üè™ Current Holder:',
    completeJourneyTimeline: 'üìã Complete Journey Timeline',
    blockchainVerificationComplete: 'üéâ Blockchain Verification Complete',
    blockchainVerificationCompleteDescription: 'This complete journey has been permanently recorded on the blockchain. Every step from farm to retail is now verifiable and transparent.',
    readyForConsumers: 'üõçÔ∏è Ready for Consumers',
    readyForConsumersDescription: 'Display the final QR code prominently so consumers can scan and verify the complete journey of their food product.',
    confirmAnother: 'Confirm Another Product',
    testConsumerView: 'Test Consumer View',
    backToHome: 'Back to Home',
    loading: 'Loading complete journey data...',
    error: 'Error',
    errorMessage: 'Unable to load produce data. Please try again.',
    goBack: 'Go Back',
    by: 'By: {actor}',
    location: 'Location: {location}'
  },
  Consumer: {
    title: 'Consumer Portal - Trace Your Food',
    scanQRCode: 'Scan QR Code',
    scanQRCodeDescription: 'Scan the QR code on the product packaging to trace its journey',
    emoji: 'üì±',
    scanButton: 'Start Scanning',
    scanButtonDescription: 'Click the button below to start scanning and discover the complete journey of your food',
    farmToTable: 'üå± Farm to Table',
    farmToTableDescription: 'Trace the complete journey from farm to your table',
    blockchainVerified: 'üîí Blockchain Verified',
    blockchainVerifiedDescription: 'All information is securely stored on the blockchain',
    fullTransparency: 'üëÅÔ∏è Full Transparency',
    fullTransparencyDescription: 'See every step of the supply chain in real-time',
    scanning: 'Scanning QR Code',
    scanningDescription: 'Point your camera at the QR code on the product packaging',
    invalidQRCode: 'Invalid QR code format',
    cameraError: 'Camera access denied or not available',
    cancel: 'Cancel Scanning',
    productJourney: 'Product Journey',
    productJourneyDescription: 'Complete traceability from farm to table',
    produceId: 'Product ID',
    produceType: 'Product Type',
    farmer: 'Farmer',
    origin: 'Origin',
    quantity: 'Quantity',
    harvestDate: 'Harvest Date',
    currentStatus: 'Current Status',
    retailPrice: 'Retail Price',
    journeyTimeline: 'Journey Timeline',
    by: 'By: {actor}',
    location: 'Location: {location}',
    scanAnother: 'Scan Another Product',
    blockchainVerification: 'Blockchain Verification',
    blockchainVerificationDescription: '‚úÖ Verified on Blockchain',
    blockchainVerificationDetail: 'All the information displayed above has been verified and stored on the blockchain. This ensures the data is authentic, tamper-proof, and transparent. You can trust that this product has been through a verified supply chain.',
    success: 'Success',
    successMessage: 'Produce information loaded successfully!',
    error: 'Error',
    errorMessage: 'Produce not found',
    grainChain: 'GrainChain'
  }
}
 GET /en/consumer 200 in 24025ms
 GET /or/consumer 200 in 118ms
Error: Route "/[locale]/consumer" used `headers().get('X-NEXT-INTL-LOCALE')`. `headers()` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at RootLayout (src\app\layout.tsx:49:32)
  47 |   let messages;
  48 |   try {
> 49 |     messages = await getMessages();
     |                                ^
  50 |   } catch (error) {
  51 |     console.error(`Failed to load messages for locale ${locale}:`, error);
  52 |     messages = {}; // Fallback to empty messages
Messages loaded in layout: {
  Index: {
    title: '‡¨ó‡≠ç‡¨∞‡≠á‡¨®‡¨ö‡≠á‡¨®‡≠ç',
    subtitle: '‡¨ï‡≠É‡¨∑‡¨ø ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨æ‡¨á‡¨Å ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡≠ç-‡¨ö‡¨æ‡¨≥‡¨ø‡¨§ ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ‡¨§‡¨æ',
    description: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü‡¨ï‡≠Å ‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ‡¨∞‡≠Å ‡¨ü‡≠á‡¨¨‡≠Å‡¨≤ ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ‡¨§‡¨æ ‡¨è‡¨¨‡¨Ç ‡¨∏‡≠Å‡¨∞‡¨ï‡≠ç‡¨∑‡¨æ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨ü‡≠ç‡¨∞‡¨æ‡¨ï‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    farmerCard: {
      title: 'üåæ ‡¨ï‡≠É‡¨∑‡¨ï',
      description: '‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï‡¨∞ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      content: '‡¨®‡≠Ç‡¨§‡¨® ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å, QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∏‡≠É‡¨∑‡≠ç‡¨ü‡¨ø ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å, ‡¨è‡¨¨‡¨Ç ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ü‡¨∞‡¨Æ‡≠ç‡¨≠ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      button: '‡¨ï‡≠É‡¨∑‡¨ï ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç ‡¨™‡≠ç‡¨∞‡¨¨‡≠á‡¨∂ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å'
    },
    distributorCard: {
      title: 'üöö ‡¨¨‡¨ø‡¨§‡¨∞‡¨ï',
      description: '‡¨≤‡¨ú‡¨ø‡¨∑‡≠ç‡¨ü‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨™‡¨†‡¨æ‡¨£ ‡¨ü‡≠ç‡¨∞‡¨æ‡¨ï‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      content: '‡¨™‡¨†‡¨æ‡¨£ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å, ‡¨≤‡¨ú‡¨ø‡¨∑‡≠ç‡¨ü‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨ü‡≠ç‡¨∞‡¨æ‡¨ï‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å, ‡¨è‡¨¨‡¨Ç ‡¨π‡≠á‡¨™‡¨æ‡¨ú‡¨§‡¨∞ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨¨‡¨ú‡¨æ‡≠ü ‡¨∞‡¨ñ‡¨®‡≠ç‡¨§‡≠Å',
      button: '‡¨¨‡¨ø‡¨§‡¨∞‡¨ï ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç ‡¨™‡≠ç‡¨∞‡¨¨‡≠á‡¨∂ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å'
    },
    retailerCard: {
      title: 'üè™ ‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨¨‡≠á‡¨™‡¨æ‡¨∞‡≠Ä',
      description: '‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      content: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å, ‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ ‡¨Ü‡¨ï‡¨≥‡¨® ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å, ‡¨è‡¨¨‡¨Ç ‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      button: '‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨¨‡≠á‡¨™‡¨æ‡¨∞‡≠Ä ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç ‡¨™‡≠ç‡¨∞‡¨¨‡≠á‡¨∂ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å'
    },
    consumerCard: {
      title: 'üë• ‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï',
      description: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨™‡≠ç‡¨∞‡¨æ‡¨Æ‡¨æ‡¨£‡¨ø‡¨ï‡¨§‡¨æ ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      content: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨ó‡≠Å‡¨°‡¨ø‡¨ï‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      button: '‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç ‡¨™‡≠ç‡¨∞‡¨¨‡≠á‡¨∂ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å'
    },
    howItWorks: {
      title: '‡¨è‡¨π‡¨æ ‡¨ï‡¨ø‡¨™‡¨∞‡¨ø ‡¨ï‡¨æ‡¨Æ ‡¨ï‡¨∞‡≠á',
      description: '‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨ó‡≠ç‡¨∞‡≠á‡¨®‡¨ö‡≠á‡¨®‡≠ç ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∞‡¨ø‡≠ü‡¨æ',
      steps: [Object]
    },
    keyFeatures: {
      title: '‡¨Æ‡≠Å‡¨ñ‡≠ç‡≠ü ‡¨¨‡≠à‡¨∂‡¨ø‡¨∑‡≠ç‡¨ü‡≠ç‡≠ü‡¨ó‡≠Å‡¨°‡¨ø‡¨ï',
      description: '‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ‡¨§‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨ó‡≠ç‡¨∞‡≠á‡¨®‡¨ö‡≠á‡¨®‡≠ç ‡¨ï‡¨æ‡¨π‡¨ø‡¨Å‡¨ï‡¨ø ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å',
      features: [Object]
    },
    benefits: {
      title: '‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§‡¨ô‡≠ç‡¨ï ‡¨™‡¨æ‡¨á‡¨Å ‡¨≤‡¨æ‡¨≠',
      farmers: [Object],
      distributors: [Object],
      retailers: [Object],
      consumers: [Object]
    },
    footer: { rights: '‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨Ö‡¨ß‡¨ø‡¨ï‡¨æ‡¨∞ ‡¨∏‡¨Ç‡¨∞‡¨ï‡≠ç‡¨∑‡¨ø‡¨§ |' }
  },
  Farmer: {
    title: '‡¨ï‡≠É‡¨∑‡¨ï ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç - ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï‡¨∞ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    register: '‡¨®‡≠Ç‡¨Ü ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    registerDescription: '‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï‡¨∞ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨¨‡¨ø‡¨¨‡¨∞‡¨£‡≠Ä ‡¨¶‡¨ø‡¨Ö‡¨®‡≠ç‡¨§‡≠Å',
    produceId: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø',
    produceIdPlaceholder: '‡¨â‡¨¶‡¨æ‡¨π‡¨∞‡¨£ ‡¨∏‡≠ç‡≠±‡¨∞‡≠Ç‡¨™, GRAIN-2024-001',
    farmerName: '‡¨ï‡≠É‡¨∑‡¨ï‡¨ô‡≠ç‡¨ï ‡¨®‡¨æ‡¨Æ',
    farmerNamePlaceholder: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï‡¨∞ ‡¨™‡≠Ç‡¨∞‡¨æ ‡¨®‡¨æ‡¨Æ',
    produceType: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡≠ç‡¨∞‡¨ï‡¨æ‡¨∞',
    selectProduceType: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡≠ç‡¨∞‡¨ï‡¨æ‡¨∞ ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å',
    wheat: '‡¨ó‡¨π‡¨Æ',
    rice: '‡¨ö‡¨æ‡¨â‡¨≥',
    corn: '‡¨Æ‡¨ï‡¨æ',
    soybeans: '‡¨∏‡≠ã‡≠ü‡¨æ‡¨¨‡¨ø‡¨®‡≠ç',
    barley: '‡¨¨‡¨æ‡¨∞‡≠ç‡¨≤‡¨ø',
    oats: '‡¨ì‡¨ü‡¨∏‡≠ç',
    quantity: '‡¨™‡¨∞‡¨ø‡¨Æ‡¨æ‡¨£',
    quantityPlaceholder: '‡¨â‡¨¶‡¨æ‡¨π‡¨∞‡¨£ ‡¨∏‡≠ç‡≠±‡¨∞‡≠Ç‡¨™, 100',
    unit: '‡¨è‡¨ï‡¨ï',
    selectUnit: '‡¨è‡¨ï‡¨ï ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å',
    kg: '‡¨ï‡¨ø‡¨≤‡≠ã‡¨ó‡≠ç‡¨∞‡¨æ‡¨Æ (kg)',
    tons: '‡¨ü‡¨®‡≠ç',
    bushels: '‡¨¨‡≠Å‡¨∂‡≠á‡¨≤‡≠ç',
    pounds: '‡¨™‡¨æ‡¨â‡¨£‡≠ç‡¨° (lbs)',
    harvestDate: '‡¨Ö‡¨Æ‡¨≥ ‡¨§‡¨æ‡¨∞‡¨ø‡¨ñ',
    origin: '‡¨â‡¨§‡≠ç‡¨™‡¨§‡≠ç‡¨§‡¨ø/‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ ‡¨∏‡≠ç‡¨•‡¨æ‡¨®',
    originPlaceholder: '‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ ‡¨†‡¨ø‡¨ï‡¨£‡¨æ ‡¨ï‡¨ø‡¨Æ‡≠ç‡¨¨‡¨æ ‡¨∏‡≠ç‡¨•‡¨æ‡¨®',
    walletAddress: '‡≠±‡¨æ‡¨≤‡≠á‡¨ü‡≠ç ‡¨†‡¨ø‡¨ï‡¨£‡¨æ',
    walletAddressPlaceholder: '0x...',
    registering: '‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
    registerProduce: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    liveQRCode: '‡¨≤‡¨æ‡¨á‡¨≠‡≠ç QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨™‡≠Ç‡¨∞‡≠ç‡¨¨‡¨æ‡¨¨‡¨≤‡≠ã‡¨ï‡¨®',
    liveQRCodeDescription: '‡¨Ü‡¨™‡¨£ ‡¨´‡¨∞‡≠ç‡¨Æ ‡¨™‡≠Ç‡¨∞‡¨£ ‡¨ï‡¨∞‡≠Å‡¨•‡¨ø‡¨¨‡¨æ ‡¨¨‡≠á‡¨≥‡≠á QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∞‡¨ø‡¨Ö‡¨≤‡≠ç-‡¨ü‡¨æ‡¨á‡¨Æ‡¨∞‡≠á ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨π‡≠Å‡¨è',
    produceIdLabel: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø:',
    notSet: '‡¨∏‡≠á‡¨ü‡≠ç ‡¨π‡≠ã‡¨á‡¨®‡¨æ‡¨π‡¨ø‡¨Å',
    typeLabel: '‡¨™‡≠ç‡¨∞‡¨ï‡¨æ‡¨∞:',
    quantityLabel: '‡¨™‡¨∞‡¨ø‡¨Æ‡¨æ‡¨£:',
    success: '‡¨∏‡¨´‡¨≥‡¨§‡¨æ',
    successMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡≠É‡¨§ ‡¨π‡≠á‡¨≤‡¨æ! QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∏‡≠É‡¨∑‡≠ç‡¨ü‡¨ø ‡¨π‡≠á‡¨≤‡¨æ‡•§',
    error: '‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø',
    errorMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨∞‡≠á ‡¨¨‡¨ø‡¨´‡¨≥'
  },
  FarmerSuccess: {
    title: '‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨∏‡¨´‡¨≥ ‡¨π‡≠á‡¨≤‡¨æ!',
    produceRegistered: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡≠É‡¨§',
    produceRegisteredDescription: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï‡¨∞ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡≠É‡¨§ ‡¨π‡≠ã‡¨á‡¨õ‡¨ø',
    produceIdLabel: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø: {produceId}',
    saveQRCode: '‡¨è‡¨π‡¨ø QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∏‡≠á‡¨≠‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨è‡¨π‡¨æ‡¨ï‡≠Å ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡≠ç‡≠ü‡¨æ‡¨ï‡≠á‡¨ú‡¨ø‡¨Ç‡¨∞‡≠á ‡¨∏‡¨Ç‡¨≤‡¨ó‡≠ç‡¨® ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    produceQRCode: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ QR ‡¨ï‡≠ã‡¨°‡≠ç',
    downloadQRCode: 'QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨°‡¨æ‡¨â‡¨®‡¨≤‡≠ã‡¨°‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    registerAnother: '‡¨Ö‡¨®‡≠ç‡≠ü ‡¨è‡¨ï ‡¨™‡¨û‡≠ç‡¨ú‡¨ø‡¨ï‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    qrCodeInfo: '‡¨è‡¨π‡¨ø QR ‡¨ï‡≠ã‡¨°‡¨∞‡≠á ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨¨‡¨ø‡¨∑‡≠ü‡¨∞‡≠á ‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨∏‡≠Ç‡¨ö‡¨®‡¨æ ‡¨∞‡¨π‡¨ø‡¨õ‡¨ø‡•§ ‡¨¨‡¨ø‡¨§‡¨∞‡¨ï, ‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨¨‡≠á‡¨™‡¨æ‡¨∞‡≠Ä ‡¨è‡¨¨‡¨Ç ‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï‡¨Æ‡¨æ‡¨®‡≠á ‡¨è‡¨π‡¨æ‡¨∞ ‡¨™‡≠ç‡¨∞‡¨æ‡¨Æ‡¨æ‡¨£‡¨ø‡¨ï‡¨§‡¨æ ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨Æ‡¨∞‡≠á ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨ü‡≠ç‡¨∞‡¨æ‡¨ï‡≠ç ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨è‡¨π‡¨æ‡¨ï‡≠Å ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á‡•§'
  },
  Distributor: {
    title: '‡¨¨‡¨ø‡¨§‡¨∞‡¨ï ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç - ‡¨≤‡¨ú‡¨ø‡¨∑‡≠ç‡¨ü‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    updateStatus: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    updateStatusDescription: '‡¨™‡¨∞‡¨ø‡¨¨‡¨π‡¨®‡¨∞‡≠á ‡¨•‡¨ø‡¨¨‡¨æ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨≤‡¨ú‡¨ø‡¨∑‡≠ç‡¨ü‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨è‡¨¨‡¨Ç ‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ‡¨® ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    produceId: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø',
    produceIdPlaceholder: '‡¨â‡¨¶‡¨æ‡¨π‡¨∞‡¨£ ‡¨∏‡≠ç‡≠±‡¨∞‡≠Ç‡¨™, GRAIN-2024-001',
    distributorName: '‡¨¨‡¨ø‡¨§‡¨∞‡¨ï‡¨ô‡≠ç‡¨ï ‡¨®‡¨æ‡¨Æ',
    distributorNamePlaceholder: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ï‡¨Æ‡≠ç‡¨™‡¨æ‡¨®‡≠Ä‡¨∞ ‡¨®‡¨æ‡¨Æ',
    currentStatus: '‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø',
    selectCurrentStatus: '‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å',
    inTransit: '‡¨™‡¨∞‡¨ø‡¨¨‡¨π‡¨®‡¨∞‡≠á',
    atWarehouse: '‡¨ó‡≠ã‡¨¶‡¨æ‡¨Æ‡¨∞‡≠á',
    outForDelivery: '‡¨¨‡¨ø‡¨§‡¨∞‡¨£ ‡¨™‡¨æ‡¨á‡¨Å ‡¨¨‡¨æ‡¨π‡¨æ‡¨∞‡¨ø‡¨õ‡¨ø',
    delayed: '‡¨¨‡¨ø‡¨≥‡¨Æ‡≠ç‡¨¨‡¨ø‡¨§',
    customsClearance: '‡¨ï‡¨∑‡≠ç‡¨ü‡¨Æ‡≠ç‡¨∏ ‡¨ï‡≠ç‡¨≤‡¨ø‡≠ü‡¨∞‡¨æ‡¨®‡≠ç‡¨∏',
    walletAddress: '‡≠±‡¨æ‡¨≤‡≠á‡¨ü‡≠ç ‡¨†‡¨ø‡¨ï‡¨£‡¨æ',
    walletAddressPlaceholder: '0x...',
    currentLocation: '‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ‡¨®',
    currentLocationPlaceholder: '‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ‡¨® ‡¨ï‡¨ø‡¨Æ‡≠ç‡¨¨‡¨æ ‡¨∏‡≠Å‡¨¨‡¨ø‡¨ß‡¨æ ‡¨†‡¨ø‡¨ï‡¨£‡¨æ',
    additionalNotes: '‡¨Ö‡¨§‡¨ø‡¨∞‡¨ø‡¨ï‡≠ç‡¨§ ‡¨ü‡¨ø‡¨™‡≠ç‡¨™‡¨£‡≠Ä',
    additionalNotesPlaceholder: '‡¨™‡¨†‡¨æ‡¨£ ‡¨¨‡¨ø‡¨∑‡≠ü‡¨∞‡≠á ‡¨ï‡≠å‡¨£‡¨∏‡¨ø ‡¨Ö‡¨§‡¨ø‡¨∞‡¨ø‡¨ï‡≠ç‡¨§ ‡¨∏‡≠Ç‡¨ö‡¨®‡¨æ',
    updating: '‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
    update: '‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    quickStatusReference: '‡¨∂‡≠Ä‡¨ò‡≠ç‡¨∞ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨∏‡¨®‡≠ç‡¨¶‡¨∞‡≠ç‡¨≠',
    inTransitDescription: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡¨∞‡¨ø‡¨¨‡¨π‡¨® ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨â‡¨õ‡¨ø',
    atWarehouseDescription: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠Å‡¨¨‡¨ø‡¨ß‡¨æ‡¨∞‡≠á ‡¨∏‡¨Ç‡¨∞‡¨ï‡≠ç‡¨∑‡¨ø‡¨§ ‡¨Ö‡¨õ‡¨ø',
    outForDeliveryDescription: '‡¨Ö‡¨®‡≠ç‡¨§‡¨ø‡¨Æ ‡¨ó‡¨®‡≠ç‡¨§‡¨¨‡≠ç‡≠ü‡¨∏‡≠ç‡¨•‡¨≥‡¨ï‡≠Å ‡¨Ø‡¨æ‡¨â‡¨õ‡¨ø',
    delayedDescription: '‡¨™‡¨†‡¨æ‡¨£ ‡¨¨‡¨ø‡¨≥‡¨Æ‡≠ç‡¨¨‡¨ø‡¨§ ‡¨π‡≠ã‡¨á‡¨õ‡¨ø',
    success: '‡¨∏‡¨´‡¨≥‡¨§‡¨æ',
    successMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨π‡≠á‡¨≤‡¨æ!',
    error: '‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø',
    errorMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨∞‡≠á ‡¨¨‡¨ø‡¨´‡¨≥'
  },
  DistributorSuccess: {
    title: '‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨∏‡¨´‡¨≥ ‡¨π‡≠á‡¨≤‡¨æ!',
    logisticsUpdated: '‡¨≤‡¨ú‡¨ø‡¨∑‡≠ç‡¨ü‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨π‡≠á‡¨≤‡¨æ',
    logisticsUpdatedDescription: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨π‡≠ã‡¨á‡¨õ‡¨ø',
    produceIdLabel: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø: {produceId}',
    currentStatus: '‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø',
    location: '‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ‡¨®',
    updateTime: '‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨∏‡¨Æ‡≠ü',
    blockchainConfirmation: '‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡≠ç ‡¨™‡≠Å‡¨∑‡≠ç‡¨ü‡¨ø‡¨ï‡¨∞‡¨£',
    blockchainConfirmationDescription: '‡¨è‡¨π‡¨ø ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨∏‡≠ç‡¨•‡¨æ‡≠ü‡≠Ä ‡¨≠‡¨æ‡¨¨‡¨∞‡≠á ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨∞‡≠á‡¨ï‡¨∞‡≠ç‡¨° ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø ‡¨è‡¨¨‡¨Ç ‡¨è‡¨π‡¨æ‡¨ï‡≠Å ‡¨™‡¨∞‡¨ø‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨® ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨™‡¨æ‡¨∞‡¨ø‡¨¨ ‡¨®‡¨æ‡¨π‡¨ø‡¨Å‡•§ ‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨Ö‡¨Ç‡¨∂‡≠Ä‡¨¶‡¨æ‡¨∞‡¨Æ‡¨æ‡¨®‡≠á ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨® ‡¨è‡¨π‡¨ø ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ‡¨® ‡¨è‡¨¨‡¨Ç ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á‡•§',
    updateAnother: '‡¨Ö‡¨®‡≠ç‡≠ü ‡¨è‡¨ï ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    backToHome: '‡¨Æ‡≠Ç‡¨≥ ‡¨™‡≠É‡¨∑‡≠ç‡¨†‡¨æ‡¨ï‡≠Å ‡¨´‡≠á‡¨∞‡¨ø‡¨Ø‡¨æ‡¨Ü‡¨®‡≠ç‡¨§‡≠Å',
    nextSteps: '‡¨™‡¨∞‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡≠Ä ‡¨™‡¨¶‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡¨ó‡≠Å‡¨°‡¨ø‡¨ï',
    nextStepsItems: [
      '‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨Æ‡¨∞‡≠á ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨ó‡¨§‡¨ø ‡¨ï‡¨∞‡≠Å‡¨•‡¨ø‡¨¨‡¨æ‡¨¨‡≠á‡¨≥‡≠á ‡¨è‡¨π‡¨æ‡¨∞ ‡¨®‡¨ø‡¨∞‡≠Ä‡¨ï‡≠ç‡¨∑‡¨£ ‡¨ú‡¨æ‡¨∞‡¨ø ‡¨∞‡¨ñ‡¨®‡≠ç‡¨§‡≠Å',
      '‡¨Ø‡≠á‡¨§‡≠á‡¨¨‡≠á‡¨≥‡≠á ‡¨¨‡¨ø ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨è‡¨ï ‡¨®‡≠Ç‡¨§‡¨® ‡¨∏‡≠ç‡¨•‡¨æ‡¨®‡¨∞‡≠á ‡¨™‡¨π‡¨û‡≠ç‡¨ö‡≠á ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      '‡¨Ø‡≠á‡¨§‡≠á‡¨¨‡≠á‡¨≥‡≠á ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨π‡¨∏‡≠ç‡¨§‡¨æ‡¨®‡≠ç‡¨§‡¨∞ ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§ ‡¨π‡≠Å‡¨è ‡¨™‡¨∞‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡≠Ä ‡¨Ö‡¨Ç‡¨∂‡≠Ä‡¨¶‡¨æ‡¨∞‡¨ô‡≠ç‡¨ï‡≠Å ‡¨∏‡≠Ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      '‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨Ö‡¨™‡¨°‡≠á‡¨ü‡≠ç ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ ‡¨è‡¨¨‡¨Ç ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö‡¨Ø‡≠ã‡¨ó‡≠ç‡≠ü'
    ]
  },
  Retailer: {
    title: '‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨¨‡≠á‡¨™‡¨æ‡¨∞‡≠Ä ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç - ‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    confirmArrival: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    confirmArrivalDescription: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    produceId: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø',
    produceIdPlaceholder: '‡¨â‡¨¶‡¨æ‡¨π‡¨∞‡¨£ ‡¨∏‡≠ç‡≠±‡¨∞‡≠Ç‡¨™, GRAIN-2024-001',
    retailerName: '‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨¨‡≠á‡¨™‡¨æ‡¨∞‡≠Ä‡¨ô‡≠ç‡¨ï ‡¨®‡¨æ‡¨Æ',
    retailerNamePlaceholder: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨¶‡≠ã‡¨ï‡¨æ‡¨®‡¨∞ ‡¨®‡¨æ‡¨Æ',
    retailPrice: '‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ($)',
    retailPricePlaceholder: '‡¨â‡¨¶‡¨æ‡¨π‡¨∞‡¨£ ‡¨∏‡≠ç‡≠±‡¨∞‡≠Ç‡¨™, 4.99',
    qualityAssessment: '‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ ‡¨Ü‡¨ï‡¨≥‡¨®',
    selectQuality: '‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å',
    excellent: '‡¨â‡¨§‡≠ç‡¨ï‡≠É‡¨∑‡≠ç‡¨ü',
    good: '‡¨≠‡¨≤',
    fair: '‡¨Æ‡¨ß‡≠ç‡≠ü‡¨Æ',
    poor: '‡¨ñ‡¨∞‡¨æ‡¨™',
    condition: '‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ',
    selectCondition: '‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ ‡¨¨‡¨æ‡¨õ‡¨®‡≠ç‡¨§‡≠Å',
    fresh: '‡¨§‡¨æ‡¨ú‡¨æ',
    acceptable: '‡¨ó‡≠ç‡¨∞‡¨π‡¨£‡≠Ä‡≠ü',
    damaged: '‡¨ï‡≠ç‡¨∑‡¨§‡¨ø‡¨ó‡≠ç‡¨∞‡¨∏‡≠ç‡¨§',
    walletAddress: '‡≠±‡¨æ‡¨≤‡≠á‡¨ü‡≠ç ‡¨†‡¨ø‡¨ï‡¨£‡¨æ',
    walletAddressPlaceholder: '0x...',
    shelfLocation: '‡¨∏‡≠á‡¨≤‡≠ç‡¨´ ‡¨∏‡≠ç‡¨•‡¨æ‡¨®',
    shelfLocationPlaceholder: '‡¨â‡¨¶‡¨æ‡¨π‡¨∞‡¨£ ‡¨∏‡≠ç‡≠±‡¨∞‡≠Ç‡¨™, ‡¨ó‡¨≥‡¨ø 3, ‡¨¨‡¨ø‡¨≠‡¨æ‡¨ó B, ‡¨∏‡≠á‡¨≤‡≠ç‡¨´ 2',
    priceSettingGuidelines: '‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨£ ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨¶‡≠á‡¨∂‡¨æ‡¨¨‡¨≥‡≠Ä',
    priceSettingGuidelinesItems: [
      '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ ‡¨è‡¨¨‡¨Ç ‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ ‡¨¨‡¨ø‡¨ö‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      '‡¨™‡¨∞‡¨ø‡¨¨‡¨π‡¨® ‡¨è‡¨¨‡¨Ç ‡¨∏‡¨Ç‡¨∞‡¨ï‡≠ç‡¨∑‡¨£ ‡¨ñ‡¨∞‡≠ç‡¨ö‡≠ç‡¨ö‡¨ï‡≠Å ‡¨ß‡≠ç‡≠ü‡¨æ‡¨®‡¨∞‡≠á ‡¨∞‡¨ñ‡¨®‡≠ç‡¨§‡≠Å',
      '‡¨∏‡¨Æ‡¨æ‡¨® ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨ó‡≠Å‡¨°‡¨ø‡¨ï ‡¨™‡¨æ‡¨á‡¨Å ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨¨‡¨ú‡¨æ‡¨∞ ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨â‡¨™‡¨∞‡≠á ‡¨ó‡¨¨‡≠á‡¨∑‡¨£‡¨æ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
      '‡¨è‡¨ï ‡¨™‡≠ç‡¨∞‡¨§‡¨ø‡¨Ø‡≠ã‡¨ó‡≠Ä ‡¨ï‡¨ø‡¨®‡≠ç‡¨§‡≠Å ‡¨≤‡¨æ‡¨≠‡¨ú‡¨®‡¨ï ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨∏‡≠ç‡¨•‡¨ø‡¨∞ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å'
    ],
    confirming: '‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø...',
    confirmAndSetPrice: '‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡≠ç‡¨ß‡¨æ‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    qualityAssessmentGuide: '‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ ‡¨Ü‡¨ï‡¨≥‡¨® ‡¨ó‡¨æ‡¨á‡¨°‡≠ç',
    excellentDescription: '‡¨™‡≠ç‡¨∞‡¨ø‡¨Æ‡¨ø‡≠ü‡¨Æ‡≠ç ‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ, ‡¨ï‡≠å‡¨£‡¨∏‡¨ø ‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø ‡¨®‡¨æ‡¨π‡¨ø‡¨Å',
    goodDescription: '‡¨∏‡¨æ‡¨Æ‡¨æ‡¨®‡≠ç‡≠ü ‡¨ï‡¨∏‡¨Æ‡≠á‡¨ü‡¨ø‡¨ï‡≠ç ‡¨∏‡¨Æ‡¨∏‡≠ç‡≠ü‡¨æ',
    fairDescription: '‡¨ß‡≠ç‡≠ü‡¨æ‡¨®‡¨Ø‡≠ã‡¨ó‡≠ç‡≠ü ‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø',
    poorDescription: '‡¨™‡≠ç‡¨∞‡¨Æ‡≠Å‡¨ñ ‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø, ‡¨®‡¨ø‡¨Æ‡≠ç‡¨® ‡¨ó‡≠Å‡¨£‡¨¨‡¨§‡≠ç‡¨§‡¨æ',
    success: '‡¨∏‡¨´‡¨≥‡¨§‡¨æ',
    successMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨π‡≠á‡¨≤‡¨æ ‡¨è‡¨¨‡¨Ç ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü ‡¨∏‡≠ç‡¨•‡¨ø‡¨∞ ‡¨π‡≠á‡¨≤‡¨æ!',
    error: '‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø',
    errorMessage: '‡¨Ü‡¨ó‡¨Æ‡¨® ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨∞‡≠á ‡¨¨‡¨ø‡¨´‡¨≥',
    grainChain: '‡¨ó‡≠ç‡¨∞‡≠á‡¨®‡¨ö‡≠á‡¨®‡≠ç'
  },
  RetailerSuccess: {
    title: 'üéâ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ - ‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï‡¨ô‡≠ç‡¨ï ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§!',
    finalJourneyQRCode: 'üéØ ‡¨Ö‡¨®‡≠ç‡¨§‡¨ø‡¨Æ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ QR ‡¨ï‡≠ã‡¨°‡≠ç',
    finalJourneyQRCodeDescription: '‡¨ó‡≠ã‡¨ü‡¨ø‡¨è ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡¨∞‡≠á ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨°‡¨æ‡¨ü‡¨æ',
    produceJourneyComplete: '‚úÖ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£',
    produceJourneyCompleteDescription: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨Æ‡¨∞‡≠á ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨ï‡¨∞‡¨ø‡¨õ‡¨ø',
    produceIdLabel: 'üÜî {produceId}',
    productLabel: 'üåæ ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶:',
    quantityLabel: 'üìè ‡¨™‡¨∞‡¨ø‡¨Æ‡¨æ‡¨£:',
    farmerLabel: 'üë®‚Äçüåæ ‡¨ï‡≠É‡¨∑‡¨ï:',
    originLabel: 'üìç ‡¨â‡¨§‡≠ç‡¨™‡¨§‡≠ç‡¨§‡¨ø:',
    priceLabel: 'üí∞ ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü:',
    notSet: '‡¨∏‡≠á‡¨ü‡≠ç ‡¨π‡≠ã‡¨á‡¨®‡¨æ‡¨π‡¨ø‡¨Å',
    statusLabel: 'üìä ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø:',
    soldLabel: '‚úÖ ‡¨¨‡¨ø‡¨ï‡≠ç‡¨∞‡¨ø ‡¨π‡≠ã‡¨á‡¨õ‡¨ø:',
    yes: '‡¨π‡¨Å',
    no: '‡¨®‡¨æ',
    currentHolderLabel: 'üè™ ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨ß‡¨æ‡¨∞‡¨ï:',
    completeJourneyTimeline: 'üìã ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨∏‡¨Æ‡≠ü‡¨∞‡≠á‡¨ñ‡¨æ',
    blockchainVerificationComplete: 'üéâ ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡≠ç ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£',
    blockchainVerificationCompleteDescription: '‡¨è‡¨π‡¨ø ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨∏‡≠ç‡¨•‡¨æ‡≠ü‡≠Ä ‡¨≠‡¨æ‡¨¨‡¨∞‡≠á ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨∞‡≠á‡¨ï‡¨∞‡≠ç‡¨° ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø‡•§ ‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ‡¨∞‡≠Å ‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§ ‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨™‡¨¶‡¨ï‡≠ç‡¨∑‡≠á‡¨™ ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨® ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö‡¨Ø‡≠ã‡¨ó‡≠ç‡≠ü ‡¨è‡¨¨‡¨Ç ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ‡•§',
    readyForConsumers: 'üõçÔ∏è ‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï‡¨ô‡≠ç‡¨ï ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§',
    readyForConsumersDescription: '‡¨Ö‡¨®‡≠ç‡¨§‡¨ø‡¨Æ QR ‡¨ï‡≠ã‡¨°‡¨ï‡≠Å ‡¨∏‡≠ç‡¨™‡¨∑‡≠ç‡¨ü ‡¨≠‡¨æ‡¨¨‡¨∞‡≠á ‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨® ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å ‡¨Ø‡¨æ‡¨π‡¨æ ‡¨¶‡≠ç‡≠±‡¨æ‡¨∞‡¨æ ‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï‡¨Æ‡¨æ‡¨®‡≠á ‡¨∏‡≠á‡¨Æ‡¨æ‡¨®‡¨ô‡≠ç‡¨ï ‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ‡¨ï‡≠Å ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨è‡¨¨‡¨Ç ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á‡•§',
    confirmAnother: '‡¨Ö‡¨®‡≠ç‡≠ü ‡¨è‡¨ï ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    testConsumerView: '‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï ‡¨¶‡≠É‡¨∂‡≠ç‡≠ü ‡¨™‡¨∞‡≠Ä‡¨ï‡≠ç‡¨∑‡¨æ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    backToHome: '‡¨Æ‡≠Ç‡¨≥ ‡¨™‡≠É‡¨∑‡≠ç‡¨†‡¨æ‡¨ï‡≠Å ‡¨´‡≠á‡¨∞‡¨ø‡¨Ø‡¨æ‡¨Ü‡¨®‡≠ç‡¨§‡≠Å',
    loading: '‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨°‡¨æ‡¨ü‡¨æ ‡¨≤‡≠ã‡¨°‡≠ç ‡¨π‡≠á‡¨â‡¨õ‡¨ø...',
    error: '‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø',
    errorMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨°‡¨æ‡¨ü‡¨æ ‡¨≤‡≠ã‡¨°‡≠ç ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨∞‡≠á ‡¨Ö‡¨∏‡¨Æ‡¨∞‡≠ç‡¨•‡•§ ‡¨¶‡≠ü‡¨æ‡¨ï‡¨∞‡¨ø ‡¨™‡≠Å‡¨£‡¨ø ‡¨ö‡≠á‡¨∑‡≠ç‡¨ü‡¨æ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§',
    goBack: '‡¨´‡≠á‡¨∞‡¨ø‡¨Ø‡¨æ‡¨Ü‡¨®‡≠ç‡¨§‡≠Å'
  },
  Consumer: {
    title: '‡¨ó‡≠ç‡¨∞‡¨æ‡¨π‡¨ï ‡¨™‡≠ã‡¨∞‡≠ç‡¨ü‡¨æ‡¨≤‡≠ç - ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    scanQRCode: 'QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    scanQRCodeDescription: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡≠ç‡≠ü‡¨æ‡¨ï‡≠á‡¨ú‡¨ø‡¨Ç‡¨∞‡≠á ‡¨•‡¨ø‡¨¨‡¨æ QR ‡¨ï‡≠ã‡¨°‡¨ï‡≠Å ‡¨è‡¨π‡¨æ‡¨∞ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    emoji: 'üì±',
    scanButton: '‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡¨ø‡¨Ç ‡¨Ü‡¨∞‡¨Æ‡≠ç‡¨≠ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    scanButtonDescription: '‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡¨ø‡¨Ç ‡¨Ü‡¨∞‡¨Æ‡≠ç‡¨≠ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨è‡¨¨‡¨Ç ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ü‡¨¨‡¨ø‡¨∑‡≠ç‡¨ï‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨®‡¨ø‡¨Æ‡≠ç‡¨®‡¨∞‡≠á ‡¨•‡¨ø‡¨¨‡¨æ ‡¨¨‡¨ü‡¨®‡≠ç ‡¨ï‡≠ç‡¨≤‡¨ø‡¨ï‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    farmToTable: 'üå± ‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ‡¨∞‡≠Å ‡¨ü‡≠á‡¨¨‡≠Å‡¨≤',
    farmToTableDescription: '‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ‡¨∞‡≠Å ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ü‡≠á‡¨¨‡≠Å‡¨≤ ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    blockchainVerified: 'üîí ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡≠ç ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨π‡≠ã‡¨á‡¨õ‡¨ø',
    blockchainVerifiedDescription: '‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨∏‡≠Ç‡¨ö‡¨®‡¨æ ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨∏‡≠Å‡¨∞‡¨ï‡≠ç‡¨∑‡¨ø‡¨§ ‡¨≠‡¨æ‡¨¨‡¨∞‡≠á ‡¨∏‡¨Ç‡¨∞‡¨ï‡≠ç‡¨∑‡¨ø‡¨§ ‡¨Ö‡¨õ‡¨ø',
    fullTransparency: 'üëÅÔ∏è ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ‡¨§‡¨æ',
    fullTransparencyDescription: '‡¨¨‡¨æ‡¨∏‡≠ç‡¨§‡¨¨-‡¨∏‡¨Æ‡≠ü‡¨∞‡≠á ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ‡¨∞ ‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨™‡¨¶‡¨ï‡≠ç‡¨∑‡≠á‡¨™ ‡¨¶‡≠á‡¨ñ‡¨®‡≠ç‡¨§‡≠Å',
    scanning: 'QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨ï‡¨∞‡≠Å‡¨õ‡¨ø',
    scanningDescription: '‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨ï‡≠ç‡≠ü‡¨æ‡¨Æ‡≠á‡¨∞‡¨æ‡¨ï‡≠Å ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡≠ç‡≠ü‡¨æ‡¨ï‡≠á‡¨ú‡¨ø‡¨Ç‡¨∞‡≠á ‡¨•‡¨ø‡¨¨‡¨æ QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨â‡¨™‡¨∞‡≠á ‡¨¶‡¨ø‡¨Ö‡¨®‡≠ç‡¨§‡≠Å',
    invalidQRCode: '‡¨Ö‡¨¨‡≠à‡¨ß QR ‡¨ï‡≠ã‡¨°‡≠ç ‡¨´‡¨∞‡≠ç‡¨Æ‡¨æ‡¨ü‡≠ç',
    cameraError: '‡¨ï‡≠ç‡≠ü‡¨æ‡¨Æ‡≠á‡¨∞‡¨æ ‡¨™‡≠ç‡¨∞‡¨¨‡≠á‡¨∂ ‡¨Ö‡¨∏‡≠ç‡≠±‡≠Ä‡¨ï‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø ‡¨ï‡¨ø‡¨Æ‡≠ç‡¨¨‡¨æ ‡¨â‡¨™‡¨≤‡¨¨‡≠ç‡¨ß ‡¨®‡¨æ‡¨π‡¨ø‡¨Å',
    cancel: '‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡¨ø‡¨Ç ‡¨¨‡¨æ‡¨§‡¨ø‡¨≤‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    productJourney: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ',
    productJourneyDescription: '‡¨´‡¨æ‡¨∞‡≠ç‡¨Æ‡¨∞‡≠Å ‡¨ü‡≠á‡¨¨‡≠Å‡¨≤ ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§ ‡¨∏‡¨Æ‡≠ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨Ö‡¨®‡≠Å‡¨∏‡¨∞‡¨£‡≠Ä‡≠ü‡¨§‡¨æ',
    produceId: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨á‡¨°‡¨ø',
    produceType: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨™‡≠ç‡¨∞‡¨ï‡¨æ‡¨∞',
    farmer: '‡¨ï‡≠É‡¨∑‡¨ï',
    origin: '‡¨â‡¨§‡≠ç‡¨™‡¨§‡≠ç‡¨§‡¨ø',
    quantity: '‡¨™‡¨∞‡¨ø‡¨Æ‡¨æ‡¨£',
    harvestDate: '‡¨Ö‡¨Æ‡¨≥ ‡¨§‡¨æ‡¨∞‡¨ø‡¨ñ',
    currentStatus: '‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨®‡¨∞ ‡¨∏‡≠ç‡¨•‡¨ø‡¨§‡¨ø',
    retailPrice: '‡¨ñ‡≠Å‡¨ö‡≠Å‡¨∞‡¨æ ‡¨Æ‡≠Ç‡¨≤‡≠ç‡≠ü',
    journeyTimeline: '‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨∏‡¨Æ‡≠ü‡¨∞‡≠á‡¨ñ‡¨æ',
    by: '‡¨¶‡≠ç‡≠±‡¨æ‡¨∞‡¨æ: {actor}',
    location: '‡¨Ö‡¨¨‡¨∏‡≠ç‡¨•‡¨æ‡¨®: {location}',
    scanAnother: '‡¨Ö‡¨®‡≠ç‡≠ü ‡¨è‡¨ï ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠ç‡¨ï‡¨æ‡¨®‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å',
    blockchainVerification: '‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡≠ç ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö',
    blockchainVerificationDescription: '‚úÖ ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨π‡≠ã‡¨á‡¨õ‡¨ø',
    blockchainVerificationDetail: '‡¨â‡¨™‡¨∞‡≠á ‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨ø‡¨§ ‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§ ‡¨∏‡≠Ç‡¨ö‡¨®‡¨æ ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø ‡¨è‡¨¨‡¨Ç ‡¨¨‡≠ç‡¨≤‡¨ï‡¨ö‡≠á‡¨®‡¨∞‡≠á ‡¨∏‡¨Ç‡¨∞‡¨ï‡≠ç‡¨∑‡¨ø‡¨§ ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø‡•§ ‡¨è‡¨π‡¨æ ‡¨∏‡≠Å‡¨®‡¨ø‡¨∂‡≠ç‡¨ö‡¨ø‡¨§ ‡¨ï‡¨∞‡≠á ‡¨Ø‡≠á ‡¨°‡¨æ‡¨ü‡¨æ ‡¨™‡≠ç‡¨∞‡¨æ‡¨Æ‡¨æ‡¨£‡¨ø‡¨ï, ‡¨ü‡≠ç‡≠ü‡¨æ‡¨Æ‡≠ç‡¨™‡¨∞‡≠ç-‡¨™‡≠ç‡¨∞‡≠Å‡¨´‡≠ç ‡¨è‡¨¨‡¨Ç ‡¨∏‡≠ç‡≠±‡¨ö‡≠ç‡¨õ ‡¨Ö‡¨ü‡≠á‡•§ ‡¨Ü‡¨™‡¨£ ‡¨¨‡¨ø‡¨∂‡≠ç‡≠±‡¨æ‡¨∏ ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á ‡¨Ø‡≠á ‡¨è‡¨π‡¨ø ‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨è‡¨ï ‡¨Ø‡¨æ‡¨û‡≠ç‡¨ö ‡¨π‡≠ã‡¨á‡¨•‡¨ø‡¨¨‡¨æ ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨£ ‡¨∂‡≠É‡¨ô‡≠ç‡¨ñ‡¨≥‡¨æ ‡¨¶‡≠á‡¨á ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø‡•§',
    success: '‡¨∏‡¨´‡¨≥‡¨§‡¨æ',
    successMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨∏‡≠Ç‡¨ö‡¨®‡¨æ ‡¨∏‡¨´‡¨≥‡¨§‡¨æ‡¨∞ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨≤‡≠ã‡¨°‡≠ç ‡¨π‡≠á‡¨≤‡¨æ!',
    error: '‡¨§‡≠ç‡¨∞‡≠Å‡¨ü‡¨ø',
    errorMessage: '‡¨â‡¨§‡≠ç‡¨™‡¨æ‡¨¶ ‡¨Æ‡¨ø‡¨≥‡¨ø‡¨≤‡¨æ ‡¨®‡¨æ‡¨π‡¨ø‡¨Å',
    grainChain: '‡¨ó‡≠ç‡¨∞‡≠á‡¨®‡¨ö‡≠á‡¨®‡≠ç'
  }
}
 GET /or/consumer 200 in 1026ms
 GET /hi/consumer 200 in 64ms
Error: Route "/[locale]/consumer" used `headers().get('X-NEXT-INTL-LOCALE')`. `headers()` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at RootLayout (src\app\layout.tsx:49:32)
  47 |   let messages;
  48 |   try {
> 49 |     messages = await getMessages();
     |                                ^
  50 |   } catch (error) {
  51 |     console.error(`Failed to load messages for locale ${locale}:`, error);
  52 |     messages = {}; // Fallback to empty messages
Messages loaded in layout: {
  Index: {
    title: '‡§ó‡•ç‡§∞‡•á‡§®‡§ö‡•á‡§®',
    subtitle: '‡§ï‡•É‡§∑‡§ø ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§®-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§‡§æ',
    description: '‡§Ö‡§™‡§®‡•á ‡§≠‡•ã‡§ú‡§® ‡§ï‡•ã ‡§ñ‡•á‡§§ ‡§∏‡•á ‡§Æ‡•á‡§ú ‡§§‡§ï ‡§™‡•Ç‡§∞‡•Ä ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§‡§æ ‡§î‡§∞ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç',
    farmerCard: {
      title: 'üåæ ‡§ï‡§ø‡§∏‡§æ‡§®',
      description: '‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§Ö‡§™‡§®‡•Ä ‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç',
      content: '‡§®‡§à ‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
      button: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç'
    },
    distributorCard: {
      title: 'üöö ‡§µ‡§ø‡§§‡§∞‡§ï',
      description: '‡§≤‡•â‡§ú‡§ø‡§∏‡•ç‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∂‡§ø‡§™‡§Æ‡•á‡§Ç‡§ü ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç',
      content: '‡§∂‡§ø‡§™‡§Æ‡•á‡§Ç‡§ü ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç, ‡§≤‡•â‡§ú‡§ø‡§∏‡•ç‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§π‡§ø‡§∞‡§æ‡§∏‡§§ ‡§ï‡•Ä ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç',
      button: '‡§µ‡§ø‡§§‡§∞‡§ï ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç'
    },
    retailerCard: {
      title: 'üè™ ‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ',
      description: '‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      content: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ï‡•á ‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç, ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§ï‡§æ ‡§Ü‡§ï‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      button: '‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç'
    },
    consumerCard: {
      title: 'üë• ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ',
      description: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï‡§§‡§æ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      content: '‡§Ö‡§™‡§®‡•á ‡§ñ‡§æ‡§¶‡•ç‡§Ø ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§∏‡•ç‡§ï‡•à‡§® ‡§ï‡§∞‡•á‡§Ç',
      button: '‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç'
    },
    howItWorks: {
      title: '‡§Ø‡§π ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à',
      description: '‡§™‡•Ç‡§∞‡•Ä ‡§ó‡•ç‡§∞‡•á‡§®‡§ö‡•á‡§® ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ',
      steps: [Object]
    },
    keyFeatures: {
      title: '‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§ê‡§Ç',
      description: '‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ó‡•ç‡§∞‡•á‡§®‡§ö‡•á‡§® ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ö‡•Å‡§®‡•á‡§Ç',
      features: [Object]
    },
    benefits: {
      title: '‡§∏‡§≠‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§æ‡§≠',
      farmers: [Object],
      distributors: [Object],
      retailers: [Object],
      consumers: [Object]
    },
    footer: { rights: '‡§∏‡§∞‡•ç‡§µ‡§æ‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§π‡•à‡§Ç‡•§' }
  },
  Farmer: {
    title: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ - ‡§Ö‡§™‡§®‡•Ä ‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç',
    register: '‡§®‡§à ‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç',
    registerDescription: '‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§Ö‡§™‡§®‡•Ä ‡§â‡§™‡§ú ‡§ï‡•ã ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§∏‡§ï‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç',
    produceId: '‡§â‡§™‡§ú ‡§Ü‡§à‡§°‡•Ä',
    produceIdPlaceholder: '‡§â‡§¶‡§æ., GRAIN-2024-001',
    farmerName: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ',
    farmerNamePlaceholder: '‡§Ü‡§™‡§ï‡§æ ‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ',
    produceType: '‡§â‡§™‡§ú ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
    selectProduceType: '‡§â‡§™‡§ú ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç',
    wheat: '‡§ó‡•á‡§π‡•Ç‡§Å',
    rice: '‡§ö‡§æ‡§µ‡§≤',
    corn: '‡§Æ‡§ï‡•ç‡§ï‡§æ',
    soybeans: '‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§®',
    barley: '‡§ú‡•å',
    oats: '‡§ú‡§à',
    quantity: '‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ',
    quantityPlaceholder: '‡§â‡§¶‡§æ., 100',
    unit: '‡§á‡§ï‡§æ‡§à',
    selectUnit: '‡§á‡§ï‡§æ‡§à ‡§ö‡•Å‡§®‡•á‡§Ç',
    kg: '‡§ï‡§ø‡§≤‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ (kg)',
    tons: '‡§ü‡§®',
    bushels: '‡§¨‡•Å‡§∂‡•á‡§≤',
    pounds: '‡§™‡§æ‡§â‡§Ç‡§° (lbs)',
    harvestDate: '‡§ï‡§ü‡§æ‡§à ‡§ï‡•Ä ‡§§‡§æ‡§∞‡•Ä‡§ñ',
    origin: '‡§Æ‡•Ç‡§≤/‡§ñ‡•á‡§§ ‡§ï‡§æ ‡§∏‡•ç‡§•‡§æ‡§®',
    originPlaceholder: '‡§ñ‡•á‡§§ ‡§ï‡§æ ‡§™‡§§‡§æ ‡§Ø‡§æ ‡§∏‡•ç‡§•‡§æ‡§®',
    walletAddress: '‡§µ‡•â‡§≤‡•á‡§ü ‡§ï‡§æ ‡§™‡§§‡§æ',
    walletAddressPlaceholder: '0x...',
    registering: '‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
    registerProduce: '‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç',
    liveQRCode: '‡§≤‡§æ‡§á‡§µ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§®',
    liveQRCodeDescription: '‡§´‡•â‡§∞‡•ç‡§Æ ‡§≠‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•ã‡§§‡§æ ‡§π‡•à',
    produceIdLabel: '‡§â‡§™‡§ú ‡§Ü‡§à‡§°‡•Ä:',
    notSet: '‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à',
    typeLabel: '‡§™‡•ç‡§∞‡§ï‡§æ‡§∞:',
    quantityLabel: '‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ:',
    success: '‡§∏‡§´‡§≤‡§§‡§æ',
    successMessage: '‡§â‡§™‡§ú ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§π‡•ã ‡§ó‡§à! ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§',
    error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
    errorMessage: '‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤'
  },
  FarmerSuccess: {
    title: '‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§∏‡§´‡§≤!',
    produceRegistered: '‡§â‡§™‡§ú ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§',
    produceRegisteredDescription: '‡§Ü‡§™‡§ï‡•Ä ‡§â‡§™‡§ú ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§π‡•ã ‡§ó‡§à ‡§π‡•à',
    produceIdLabel: '‡§â‡§™‡§ú ‡§Ü‡§à‡§°‡•Ä: {produceId}',
    saveQRCode: '‡§á‡§∏ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§ï‡•ã ‡§∏‡§π‡•á‡§ú‡•á‡§Ç ‡§î‡§∞ ‡§á‡§∏‡•á ‡§Ö‡§™‡§®‡•Ä ‡§â‡§™‡§ú ‡§™‡•à‡§ï‡•á‡§ú‡§ø‡§Ç‡§ó ‡§™‡§∞ ‡§∏‡§Ç‡§≤‡§ó‡•ç‡§® ‡§ï‡§∞‡•á‡§Ç',
    produceQRCode: '‡§â‡§™‡§ú ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§°',
    downloadQRCode: '‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç',
    registerAnother: '‡§è‡§ï ‡§î‡§∞ ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç',
    qrCodeInfo: '‡§á‡§∏ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§â‡§™‡§ú ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§æ‡§∞‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§π‡•à‡•§ ‡§µ‡§ø‡§§‡§∞‡§ï, ‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ ‡§î‡§∞ ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§á‡§∏‡§ï‡•Ä ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï‡§§‡§æ ‡§ï‡•ã ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Ü‡§™‡§ï‡•Ä ‡§â‡§™‡§ú ‡§ï‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§∏‡•á ‡§∏‡•ç‡§ï‡•à‡§® ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§'
  },
  Distributor: {
    title: '‡§µ‡§ø‡§§‡§∞‡§ï ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ - ‡§≤‡•â‡§ú‡§ø‡§∏‡•ç‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
    updateStatus: '‡§â‡§™‡§ú ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
    updateStatusDescription: '‡§™‡§æ‡§∞‡§ó‡§Æ‡§® ‡§Æ‡•á‡§Ç ‡§â‡§™‡§ú ‡§ï‡•Ä ‡§≤‡•â‡§ú‡§ø‡§∏‡•ç‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§î‡§∞ ‡§∏‡•ç‡§•‡§æ‡§® ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
    produceId: '‡§â‡§™‡§ú ‡§Ü‡§à‡§°‡•Ä',
    produceIdPlaceholder: '‡§â‡§¶‡§æ., GRAIN-2024-001',
    distributorName: '‡§µ‡§ø‡§§‡§∞‡§ï ‡§ï‡§æ ‡§®‡§æ‡§Æ',
    distributorNamePlaceholder: '‡§Ü‡§™‡§ï‡•Ä ‡§ï‡§Ç‡§™‡§®‡•Ä ‡§ï‡§æ ‡§®‡§æ‡§Æ',
    currentStatus: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø',
    selectCurrentStatus: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç',
    inTransit: '‡§™‡§æ‡§∞‡§ó‡§Æ‡§® ‡§Æ‡•á‡§Ç',
    atWarehouse: '‡§ó‡•ã‡§¶‡§æ‡§Æ ‡§Æ‡•á‡§Ç',
    outForDelivery: '‡§µ‡§ø‡§§‡§∞‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§æ‡§π‡§∞',
    delayed: '‡§¶‡•á‡§∞‡•Ä ‡§∏‡•á',
    customsClearance: '‡§∏‡•Ä‡§Æ‡§æ ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§®‡§ø‡§ï‡§æ‡§∏‡•Ä',
    walletAddress: '‡§µ‡•â‡§≤‡•á‡§ü ‡§ï‡§æ ‡§™‡§§‡§æ',
    walletAddressPlaceholder: '0x...',
    currentLocation: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§æ‡§®',
    currentLocationPlaceholder: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§æ‡§® ‡§Ø‡§æ ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ ‡§ï‡§æ ‡§™‡§§‡§æ',
    additionalNotes: '‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§®‡•ã‡§ü‡•ç‡§∏',
    additionalNotesPlaceholder: '‡§∂‡§ø‡§™‡§Æ‡•á‡§Ç‡§ü ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä',
    updating: '‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
    update: '‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
    quickStatusReference: '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§∏‡§Ç‡§¶‡§∞‡•ç‡§≠',
    inTransitDescription: '‡§â‡§™‡§ú ‡§ï‡§æ ‡§™‡§∞‡§ø‡§µ‡§π‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à',
    atWarehouseDescription: '‡§â‡§™‡§ú ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•Ä‡§§ ‡§π‡•à',
    outForDeliveryDescription: '‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§ó‡§Ç‡§§‡§µ‡•ç‡§Ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§æ‡§∞‡•ç‡§ó ‡§Æ‡•á‡§Ç',
    delayedDescription: '‡§∂‡§ø‡§™‡§Æ‡•á‡§Ç‡§ü ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§∞‡•Ä ‡§π‡•ã ‡§ó‡§à ‡§π‡•à',
    success: '‡§∏‡§´‡§≤‡§§‡§æ',
    successMessage: '‡§â‡§™‡§ú ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•ã ‡§ó‡§à!',
    error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
    errorMessage: '‡§â‡§™‡§ú ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤'
  },
  DistributorSuccess: {
    title: '‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Ö‡§™‡§°‡•á‡§ü ‡§∏‡§´‡§≤!',
    logisticsUpdated: '‡§≤‡•â‡§ú‡§ø‡§∏‡•ç‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ',
    logisticsUpdatedDescription: '‡§â‡§™‡§ú ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•ã ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à',
    produceIdLabel: '‡§â‡§™‡§ú ‡§Ü‡§à‡§°‡•Ä: {produceId}',
    currentStatus: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø',
    location: '‡§∏‡•ç‡§•‡§æ‡§®',
    updateTime: '‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§æ ‡§∏‡§Æ‡§Ø',
    blockchainConfirmation: '‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø‡§ï‡§∞‡§£',
    blockchainConfirmationDescription: '‡§Ø‡§π ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Ö‡§™‡§°‡•á‡§ü ‡§∏‡•ç‡§•‡§æ‡§Ø‡•Ä ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡•á ‡§¨‡§¶‡§≤‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§∏‡§≠‡•Ä ‡§π‡§ø‡§§‡§ß‡§æ‡§∞‡§ï ‡§Ö‡§¨ ‡§á‡§∏ ‡§â‡§™‡§ú ‡§ï‡•Ä ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§î‡§∞ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡•ã ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§',
    updateAnother: '‡§è‡§ï ‡§î‡§∞ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
    backToHome: '‡§π‡•ã‡§Æ ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç',
    nextSteps: '‡§Ö‡§ó‡§≤‡•á ‡§ö‡§∞‡§£',
    nextStepsItems: [
      '‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§®‡•á ‡§™‡§∞ ‡§â‡§™‡§ú ‡§ï‡•Ä ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§ï‡§∞‡§®‡§æ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç',
      '‡§ú‡§¨ ‡§≠‡•Ä ‡§â‡§™‡§ú ‡§ï‡§ø‡§∏‡•Ä ‡§®‡§è ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡§∞ ‡§™‡§π‡•Å‡§Ç‡§ö‡•á ‡§§‡•ã ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•ã ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç',
      '‡§ú‡§¨ ‡§â‡§™‡§ú ‡§π‡•à‡§Ç‡§°‡§ì‡§µ‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•ã ‡§§‡•ã ‡§Ö‡§ó‡§≤‡•á ‡§π‡§ø‡§§‡§ß‡§æ‡§∞‡§ï ‡§ï‡•ã ‡§∏‡•Ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
      '‡§∏‡§≠‡•Ä ‡§Ö‡§™‡§°‡•á‡§ü ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡•Ä ‡§î‡§∞ ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§π‡•à‡§Ç'
    ]
  },
  Retailer: {
    title: '‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ - ‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    confirmArrival: '‡§â‡§™‡§ú ‡§ï‡•á ‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç',
    confirmArrivalDescription: '‡§â‡§™‡§ú ‡§ï‡•á ‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    produceId: '‡§â‡§™‡§ú ‡§Ü‡§à‡§°‡•Ä',
    produceIdPlaceholder: '‡§â‡§¶‡§æ., GRAIN-2024-001',
    retailerName: '‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ',
    retailerNamePlaceholder: '‡§Ü‡§™‡§ï‡•á ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§æ ‡§®‡§æ‡§Æ',
    retailPrice: '‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ($)',
    retailPricePlaceholder: '‡§â‡§¶‡§æ., 4.99',
    qualityAssessment: '‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§®',
    selectQuality: '‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç',
    excellent: '‡§â‡§§‡•ç‡§ï‡•É‡§∑‡•ç‡§ü',
    good: '‡§Ö‡§ö‡•ç‡§õ‡§æ',
    fair: '‡§†‡•Ä‡§ï',
    poor: '‡§ñ‡§∞‡§æ‡§¨',
    condition: '‡§∏‡•ç‡§•‡§ø‡§§‡§ø',
    selectCondition: '‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç',
    fresh: '‡§§‡§æ‡§ú‡§º‡§æ',
    acceptable: '‡§∏‡•ç‡§µ‡•Ä‡§ï‡§æ‡§∞‡•ç‡§Ø',
    damaged: '‡§ï‡•ç‡§∑‡§§‡§ø‡§ó‡•ç‡§∞‡§∏‡•ç‡§§',
    walletAddress: '‡§µ‡•â‡§≤‡•á‡§ü ‡§ï‡§æ ‡§™‡§§‡§æ',
    walletAddressPlaceholder: '0x...',
    shelfLocation: '‡§∂‡•á‡§≤‡•ç‡§´ ‡§∏‡•ç‡§•‡§æ‡§®',
    shelfLocationPlaceholder: '‡§â‡§¶‡§æ., ‡§ó‡§≤‡§ø‡§Ø‡§æ‡§∞‡§æ 3, ‡§Ö‡§®‡•Å‡§≠‡§æ‡§ó ‡§¨‡•Ä, ‡§∂‡•á‡§≤‡•ç‡§´ 2',
    priceSettingGuidelines: '‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§£ ‡§¶‡§ø‡§∂‡§æ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂',
    priceSettingGuidelinesItems: [
      '‡§â‡§™‡§ú ‡§ï‡•Ä ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§î‡§∞ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§™‡§∞ ‡§µ‡§ø‡§ö‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç',
      '‡§™‡§∞‡§ø‡§µ‡§π‡§® ‡§î‡§∞ ‡§≠‡§Ç‡§°‡§æ‡§∞‡§£ ‡§≤‡§æ‡§ó‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§∞‡§ï',
      '‡§∏‡§Æ‡§æ‡§® ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§∂‡•ã‡§ß ‡§ï‡§∞‡•á‡§Ç',
      '‡§è‡§ï ‡§™‡•ç‡§∞‡§§‡§ø‡§∏‡•ç‡§™‡§∞‡•ç‡§ß‡•Ä ‡§≤‡•á‡§ï‡§ø‡§® ‡§≤‡§æ‡§≠‡§¶‡§æ‡§Ø‡§ï ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç'
    ],
    confirming: '‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à...',
    confirmAndSetPrice: '‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    qualityAssessmentGuide: '‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§® ‡§ó‡§æ‡§á‡§°',
    excellentDescription: '‡§™‡•ç‡§∞‡•Ä‡§Æ‡§ø‡§Ø‡§Æ ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ, ‡§ï‡•ã‡§à ‡§¶‡•ã‡§∑ ‡§®‡§π‡•Ä‡§Ç',
    goodDescription: '‡§Æ‡§æ‡§Æ‡•Ç‡§≤‡•Ä ‡§ï‡•â‡§∏‡•ç‡§Æ‡•á‡§ü‡§ø‡§ï ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á',
    fairDescription: '‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§®‡•á ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§¶‡•ã‡§∑',
    poorDescription: '‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§¶‡•ã‡§∑, ‡§®‡§ø‡§Æ‡•ç‡§® ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ',
    success: '‡§∏‡§´‡§≤‡§§‡§æ',
    successMessage: '‡§â‡§™‡§ú ‡§ï‡§æ ‡§Ü‡§ó‡§Æ‡§® ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!',
    error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
    errorMessage: '‡§Ü‡§ó‡§Æ‡§® ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤',
    grainChain: '‡§ó‡•ç‡§∞‡•á‡§®‡§ö‡•á‡§®'
  },
  RetailerSuccess: {
    title: 'üéâ ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ - ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞!',
    finalJourneyQRCode: 'üéØ ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§°',
    finalJourneyQRCodeDescription: '‡§è‡§ï ‡§∏‡•ç‡§ï‡•à‡§® ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§∞‡•Ä ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§°‡•á‡§ü‡§æ',
    produceJourneyComplete: '‚úÖ ‡§â‡§™‡§ú ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§™‡•Ç‡§∞‡•Ä ‡§π‡•Å‡§à',
    produceJourneyCompleteDescription: '‡§â‡§™‡§ú ‡§®‡•á ‡§™‡•Ç‡§∞‡•Ä ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•Ä ‡§π‡•à',
    produceIdLabel: 'üÜî {produceId}',
    productLabel: 'üåæ ‡§â‡§§‡•ç‡§™‡§æ‡§¶:',
    quantityLabel: 'üìè ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ:',
    farmerLabel: 'üë®‚Äçüåæ ‡§ï‡§ø‡§∏‡§æ‡§®:',
    originLabel: 'üìç ‡§Æ‡•Ç‡§≤:',
    priceLabel: 'üí∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø:',
    notSet: '‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à',
    statusLabel: 'üìä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø:',
    soldLabel: '‚úÖ ‡§¨‡•á‡§ö‡§æ ‡§ó‡§Ø‡§æ:',
    yes: '‡§π‡§æ‡§Å',
    no: '‡§®‡§π‡•Ä‡§Ç',
    currentHolderLabel: 'üè™ ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§ß‡§æ‡§∞‡§ï:',
    completeJourneyTimeline: 'üìã ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§∏‡§Æ‡§Ø‡§∞‡•á‡§ñ‡§æ',
    blockchainVerificationComplete: 'üéâ ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü',
    blockchainVerificationCompleteDescription: '‡§Ø‡§π ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§∏‡•ç‡§•‡§æ‡§Ø‡•Ä ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡•Ä ‡§ó‡§à ‡§π‡•à‡•§ ‡§ñ‡•á‡§§ ‡§∏‡•á ‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§§‡§ï ‡§π‡§∞ ‡§ï‡§¶‡§Æ ‡§Ö‡§¨ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§î‡§∞ ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡•Ä ‡§π‡•à‡•§',
    readyForConsumers: 'üõçÔ∏è ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞',
    readyForConsumersDescription: '‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§ï‡•ã ‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ‡§§‡§æ ‡§∏‡•á ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§Ö‡§™‡§®‡•á ‡§ñ‡§æ‡§¶‡•ç‡§Ø ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•ã ‡§∏‡•ç‡§ï‡•à‡§® ‡§î‡§∞ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞ ‡§∏‡§ï‡•á‡§Ç‡•§',
    confirmAnother: '‡§è‡§ï ‡§î‡§∞ ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç',
    testConsumerView: '‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§¶‡•É‡§∂‡•ç‡§Ø ‡§ï‡§æ ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç',
    backToHome: '‡§π‡•ã‡§Æ ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç',
    loading: '‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§°‡•á‡§ü‡§æ ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
    error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
    errorMessage: '‡§â‡§™‡§ú ‡§°‡•á‡§ü‡§æ ‡§≤‡•ã‡§° ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Ö‡§∏‡§Æ‡§∞‡•ç‡§•‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•Å‡§®: ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§',
    goBack: '‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§ì'
  },
  Consumer: {
    title: '‡§â‡§™‡§≠‡•ã‡§ï‡•ç‡§§‡§æ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤ - ‡§Ö‡§™‡§®‡•á ‡§≠‡•ã‡§ú‡§® ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç',
    scanQRCode: '‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§∏‡•ç‡§ï‡•à‡§® ‡§ï‡§∞‡•á‡§Ç',
    scanQRCodeDescription: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§™‡•à‡§ï‡•á‡§ú‡§ø‡§Ç‡§ó ‡§™‡§∞ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§ï‡•ã ÿßÿ≥ ⁄©€å ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§ï‡•à‡§® ‡§ï‡§∞‡•á‡§Ç',
    emoji: 'üì±',
    scanButton: '‡§∏‡•ç‡§ï‡•à‡§®‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
    scanButtonDescription: '‡§∏‡•ç‡§ï‡•à‡§®‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§Ö‡§™‡§®‡•á ‡§≠‡•ã‡§ú‡§® ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡•Ä ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç',
    farmToTable: 'üå± ‡§ñ‡•á‡§§ ‡§∏‡•á ‡§Æ‡•á‡§ú ‡§§‡§ï',
    farmToTableDescription: '‡§ñ‡•á‡§§ ‡§∏‡•á ‡§Ö‡§™‡§®‡•Ä ‡§Æ‡•á‡§ú ‡§§‡§ï ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§è‡§Ç',
    blockchainVerified: 'üîí ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§',
    blockchainVerifiedDescription: '‡§∏‡§≠‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•Ä‡§§ ‡§π‡•à',
    fullTransparency: 'üëÅÔ∏è ‡§™‡•Ç‡§∞‡•Ä ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§‡§æ',
    fullTransparencyDescription: '‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§ï‡•á ‡§π‡§∞ ‡§ö‡§∞‡§£ ‡§ï‡•ã ‡§¶‡•á‡§ñ‡•á‡§Ç',
    scanning: '‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§∏‡•ç‡§ï‡•à‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à',
    scanningDescription: '‡§Ö‡§™‡§®‡•á ‡§ï‡•à‡§Æ‡§∞‡•á ‡§ï‡•ã ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§™‡•à‡§ï‡•á‡§ú‡§ø‡§Ç‡§ó ‡§™‡§∞ ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§™‡§∞ ‡§á‡§Ç‡§ó‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    invalidQRCode: '‡§Ö‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ï‡•ç‡§Ø‡•Ç‡§Ü‡§∞ ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™',
    cameraError: '‡§ï‡•à‡§Æ‡§∞‡§æ ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§Ö‡§∏‡•ç‡§µ‡•Ä‡§ï‡•É‡§§ ‡§Ø‡§æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à',
    cancel: '‡§∏‡•ç‡§ï‡•à‡§®‡§ø‡§Ç‡§ó ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
    productJourney: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ',
    productJourneyDescription: '‡§ñ‡•á‡§§ ‡§∏‡•á ‡§Æ‡•á‡§ú ‡§§‡§ï ‡§™‡•Ç‡§∞‡•Ä ‡§ü‡•ç‡§∞‡•á‡§∏‡§¨‡§ø‡§≤‡§ø‡§ü‡•Ä',
    produceId: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§Ü‡§à‡§°‡•Ä',
    produceType: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
    farmer: '‡§ï‡§ø‡§∏‡§æ‡§®',
    origin: '‡§Æ‡•Ç‡§≤',
    quantity: '‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ',
    harvestDate: '‡§ï‡§ü‡§æ‡§à ‡§ï‡•Ä ‡§§‡§æ‡§∞‡•Ä‡§ñ',
    currentStatus: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø',
    retailPrice: '‡§ñ‡•Å‡§¶‡§∞‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø',
    journeyTimeline: '‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§∏‡§Æ‡§Ø‡§∞‡•á‡§ñ‡§æ',
    by: '‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ: {actor}',
    location: '‡§∏‡•ç‡§•‡§æ‡§®: {location}',
    scanAnother: '‡§è‡§ï ‡§î‡§∞ ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§∏‡•ç‡§ï‡•à‡§® ‡§ï‡§∞‡•á‡§Ç',
    blockchainVerification: '‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§®',
    blockchainVerificationDescription: '‚úÖ ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§',
    blockchainVerificationDetail: '‡§ä‡§™‡§∞ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§ ‡§∏‡§≠‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•ã ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§î‡§∞ ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§™‡§∞ ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π‡•Ä‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§°‡•á‡§ü‡§æ ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï, ‡§õ‡•á‡§°‡§º‡§õ‡§æ‡§°‡§º-‡§™‡•ç‡§∞‡•Ç‡§´ ‡§î‡§∞ ‡§™‡§æ‡§∞‡§¶‡§∞‡•ç‡§∂‡•Ä ‡§π‡•à‡•§ ‡§Ü‡§™ ‡§≠‡§∞‡•ã‡§∏‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§Ø‡§π ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§è‡§ï ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø ‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§∏‡•á ‡§ó‡•Å‡§ú‡§∞‡§æ ‡§π‡•à‡•§',
    success: '‡§∏‡§´‡§≤‡§§‡§æ',
    successMessage: '‡§â‡§™‡§ú ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≤‡•ã‡§° ‡§π‡•ã ‡§ó‡§à!',
    error: '‡§§‡•ç‡§∞‡•Å‡§ü‡§ø',
    errorMessage: '‡§â‡§™‡§ú ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä',
    grainChain: '‡§ó‡•ç‡§∞‡•á‡§®‡§ö‡•á‡§®'
  }
}
 GET /hi/consumer 200 in 911ms
 GET /en/consumer 200 in 103ms
Error: Route "/[locale]/consumer" used `headers().get('X-NEXT-INTL-LOCALE')`. `headers()` should be awaited before using its value. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at RootLayout (src\app\layout.tsx:49:32)
  47 |   let messages;
  48 |   try {
> 49 |     messages = await getMessages();
     |                                ^
  50 |   } catch (error) {
  51 |     console.error(`Failed to load messages for locale ${locale}:`, error);
  52 |     messages = {}; // Fallback to empty messages
Messages loaded in layout: {
  Index: {
    title: 'GrainChain',
    subtitle: 'Blockchain-powered supply chain transparency for agricultural products',
    description: 'Track your food from farm to table with complete transparency and security',
    farmerCard: {
      title: 'üåæ Farmer',
      description: 'Register your produce on the blockchain',
      content: 'Register new produce, generate QR codes, and start the traceability journey',
      button: 'Enter Farmer Portal'
    },
    distributorCard: {
      title: 'üöö Distributor',
      description: 'Update logistics and track shipments',
      content: 'Update shipment status, track logistics, and maintain chain of custody',
      button: 'Enter Distributor Portal'
    },
    retailerCard: {
      title: 'üè™ Retailer',
      description: 'Confirm arrival and set pricing',
      content: 'Confirm product arrival, assess quality, and set retail prices',
      button: 'Enter Retailer Portal'
    },
    consumerCard: {
      title: 'üë• Consumer',
      description: 'Trace product journey and verify authenticity',
      content: 'Scan QR codes to trace the complete journey of your food products',
      button: 'Enter Consumer Portal'
    },
    howItWorks: {
      title: 'How It Works',
      description: 'The complete GrainChain supply chain process',
      steps: [Object]
    },
    keyFeatures: {
      title: 'Key Features',
      description: 'Why choose GrainChain for supply chain transparency',
      features: [Object]
    },
    benefits: {
      title: 'Benefits for Everyone',
      farmers: [Object],
      distributors: [Object],
      retailers: [Object],
      consumers: [Object]
    },
    footer: { rights: 'All rights reserved.' }
  },
  Farmer: {
    title: 'Farmer Portal - Register Your Produce',
    register: 'Register New Produce',
    registerDescription: 'Enter the details of your produce to register it on the blockchain',
    produceId: 'Produce ID',
    produceIdPlaceholder: 'e.g., GRAIN-2024-001',
    farmerName: 'Farmer Name',
    farmerNamePlaceholder: 'Your full name',
    produceType: 'Produce Type',
    selectProduceType: 'Select produce type',
    wheat: 'Wheat',
    rice: 'Rice',
    corn: 'Corn',
    soybeans: 'Soybeans',
    barley: 'Barley',
    oats: 'Oats',
    quantity: 'Quantity',
    quantityPlaceholder: 'e.g., 100',
    unit: 'Unit',
    selectUnit: 'Select unit',
    kg: 'Kilograms (kg)',
    tons: 'Tons',
    bushels: 'Bushels',
    pounds: 'Pounds (lbs)',
    harvestDate: 'Harvest Date',
    origin: 'Origin/Farm Location',
    originPlaceholder: 'Farm address or location',
    walletAddress: 'Wallet Address',
    walletAddressPlaceholder: '0x...',
    registering: 'Registering...',
    registerProduce: 'Register Produce',
    liveQRCode: 'Live QR Code Preview',
    liveQRCodeDescription: 'QR code updates in real-time as you fill the form',
    produceIdLabel: 'Produce ID:',
    notSet: 'Not set',
    typeLabel: 'Type:',
    quantityLabel: 'Quantity:',
    success: 'Success',
    successMessage: 'Produce registered successfully! QR code generated.',
    error: 'Error',
    errorMessage: 'Failed to register produce'
  },
  FarmerSuccess: {
    title: 'Registration Successful!',
    produceRegistered: 'Produce Registered',
    produceRegisteredDescription: 'Your produce has been successfully registered on the blockchain',
    produceIdLabel: 'Produce ID: {produceId}',
    saveQRCode: 'Save this QR code and attach it to your produce packaging',
    produceQRCode: 'Produce QR code',
    downloadQRCode: 'Download QR Code',
    registerAnother: 'Register Another',
    qrCodeInfo: 'This QR code contains all the information about your produce. Distributors, retailers, and consumers can scan it to verify the authenticity and track the journey of your produce through the supply chain.'
  },
  Distributor: {
    title: 'Distributor Portal - Update Logistics',
    updateStatus: 'Update Produce Status',
    updateStatusDescription: 'Update the logistics status and location of produce in transit',
    produceId: 'Produce ID',
    produceIdPlaceholder: 'e.g., GRAIN-2024-001',
    distributorName: 'Distributor Name',
    distributorNamePlaceholder: 'Your company name',
    currentStatus: 'Current Status',
    selectCurrentStatus: 'Select current status',
    inTransit: 'In Transit',
    atWarehouse: 'At Warehouse',
    outForDelivery: 'Out for Delivery',
    delayed: 'Delayed',
    customsClearance: 'Customs Clearance',
    walletAddress: 'Wallet Address',
    walletAddressPlaceholder: '0x...',
    currentLocation: 'Current Location',
    currentLocationPlaceholder: 'Current location or facility address',
    additionalNotes: 'Additional Notes',
    additionalNotesPlaceholder: 'Any additional information about the shipment',
    updating: 'Updating...',
    update: 'Update Status',
    quickStatusReference: 'Quick Status Reference',
    inTransitDescription: 'Produce is being transported',
    atWarehouseDescription: 'Produce is stored at facility',
    outForDeliveryDescription: 'En route to final destination',
    delayedDescription: 'Shipment is delayed',
    success: 'Success',
    successMessage: 'Produce status updated successfully!',
    error: 'Error',
    errorMessage: 'Failed to update produce status'
  },
  DistributorSuccess: {
    title: 'Status Update Successful!',
    logisticsUpdated: 'Logistics Updated',
    logisticsUpdatedDescription: 'The produce status has been successfully updated on the blockchain',
    produceIdLabel: 'Produce ID: {produceId}',
    currentStatus: 'Current Status',
    location: 'Location',
    updateTime: 'Update Time',
    blockchainConfirmation: 'Blockchain Confirmation',
    blockchainConfirmationDescription: 'This status update has been permanently recorded on the blockchain and cannot be altered. All stakeholders can now verify the current location and status of this produce.',
    updateAnother: 'Update Another',
    backToHome: 'Back to Home',
    nextSteps: 'Next Steps',
    nextStepsItems: [
      'Continue monitoring the produce as it moves through the supply chain',
      'Update the status whenever the produce reaches a new location',
      'Notify the next stakeholder when the produce is ready for handover',
      'All updates are transparent and verifiable on the blockchain'
    ]
  },
  Retailer: {
    title: 'Retailer Portal - Confirm Arrival & Set Price',
    confirmArrival: 'Confirm Produce Arrival',
    confirmArrivalDescription: 'Confirm the arrival of produce and set the retail price',
    produceId: 'Produce ID',
    produceIdPlaceholder: 'e.g., GRAIN-2024-001',
    retailerName: 'Retailer Name',
    retailerNamePlaceholder: 'Your store name',
    retailPrice: 'Retail Price ($)',
    retailPricePlaceholder: 'e.g., 4.99',
    qualityAssessment: 'Quality Assessment',
    selectQuality: 'Select quality',
    excellent: 'Excellent',
    good: 'Good',
    fair: 'Fair',
    poor: 'Poor',
    condition: 'Condition',
    selectCondition: 'Select condition',
    fresh: 'Fresh',
    acceptable: 'Acceptable',
    damaged: 'Damaged',
    walletAddress: 'Wallet Address',
    walletAddressPlaceholder: '0x...',
    shelfLocation: 'Shelf Location',
    shelfLocationPlaceholder: 'e.g., Aisle 3, Section B, Shelf 2',
    priceSettingGuidelines: 'Price Setting Guidelines',
    priceSettingGuidelinesItems: [
      'Consider the quality and condition of the produce',
      'Factor in transportation and storage costs',
      'Research current market prices for similar products',
      'Set a competitive but profitable price'
    ],
    confirming: 'Confirming...',
    confirmAndSetPrice: 'Confirm Arrival & Set Price',
    qualityAssessmentGuide: 'Quality Assessment Guide',
    excellentDescription: 'Premium quality, no defects',
    goodDescription: 'Minor cosmetic issues',
    fairDescription: 'Noticeable defects',
    poorDescription: 'Major defects, lower quality',
    success: 'Success',
    successMessage: 'Produce arrival confirmed and price set!',
    error: 'Error',
    errorMessage: 'Failed to confirm arrival',
    grainChain: 'Grain Chain'
  },
  RetailerSuccess: {
    title: 'üéâ Complete Journey - Ready for Consumers!',
    finalJourneyQRCode: 'üéØ Final Journey QR Code',
    finalJourneyQRCodeDescription: 'Complete supply chain data in one scan',
    produceJourneyComplete: '‚úÖ Produce Journey Complete',
    produceJourneyCompleteDescription: 'The produce has successfully traveled through the entire supply chain',
    produceIdLabel: 'üÜî {produceId}',
    productLabel: 'üåæ Product:',
    quantityLabel: 'üìè Quantity:',
    farmerLabel: 'üë®‚Äçüåæ Farmer:',
    originLabel: 'üìç Origin:',
    priceLabel: 'üí∞ Price:',
    notSet: 'Not set',
    statusLabel: 'üìä Status:',
    soldLabel: '‚úÖ Sold:',
    yes: 'Yes',
    no: 'No',
    currentHolderLabel: 'üè™ Current Holder:',
    completeJourneyTimeline: 'üìã Complete Journey Timeline',
    blockchainVerificationComplete: 'üéâ Blockchain Verification Complete',
    blockchainVerificationCompleteDescription: 'This complete journey has been permanently recorded on the blockchain. Every step from farm to retail is now verifiable and transparent.',
    readyForConsumers: 'üõçÔ∏è Ready for Consumers',
    readyForConsumersDescription: 'Display the final QR code prominently so consumers can scan and verify the complete journey of their food product.',
    confirmAnother: 'Confirm Another Product',
    testConsumerView: 'Test Consumer View',
    backToHome: 'Back to Home',
    loading: 'Loading complete journey data...',
    error: 'Error',
    errorMessage: 'Unable to load produce data. Please try again.',
    goBack: 'Go Back',
    by: 'By: {actor}',
    location: 'Location: {location}'
  },
  Consumer: {
    title: 'Consumer Portal - Trace Your Food',
    scanQRCode: 'Scan QR Code',
    scanQRCodeDescription: 'Scan the QR code on the product packaging to trace its journey',
    emoji: 'üì±',
    scanButton: 'Start Scanning',
    scanButtonDescription: 'Click the button below to start scanning and discover the complete journey of your food',
    farmToTable: 'üå± Farm to Table',
    farmToTableDescription: 'Trace the complete journey from farm to your table',
    blockchainVerified: 'üîí Blockchain Verified',
    blockchainVerifiedDescription: 'All information is securely stored on the blockchain',
    fullTransparency: 'üëÅÔ∏è Full Transparency',
    fullTransparencyDescription: 'See every step of the supply chain in real-time',
    scanning: 'Scanning QR Code',
    scanningDescription: 'Point your camera at the QR code on the product packaging',
    invalidQRCode: 'Invalid QR code format',
    cameraError: 'Camera access denied or not available',
    cancel: 'Cancel Scanning',
    productJourney: 'Product Journey',
    productJourneyDescription: 'Complete traceability from farm to table',
    produceId: 'Product ID',
    produceType: 'Product Type',
    farmer: 'Farmer',
    origin: 'Origin',
    quantity: 'Quantity',
    harvestDate: 'Harvest Date',
    currentStatus: 'Current Status',
    retailPrice: 'Retail Price',
    journeyTimeline: 'Journey Timeline',
    by: 'By: {actor}',
    location: 'Location: {location}',
    scanAnother: 'Scan Another Product',
    blockchainVerification: 'Blockchain Verification',
    blockchainVerificationDescription: '‚úÖ Verified on Blockchain',
    blockchainVerificationDetail: 'All the information displayed above has been verified and stored on the blockchain. This ensures the data is authentic, tamper-proof, and transparent. You can trust that this product has been through a verified supply chain.',
    success: 'Success',
    successMessage: 'Produce information loaded successfully!',
    error: 'Error',
    errorMessage: 'Produce not found',
    grainChain: 'GrainChain'
  }
}
 GET /en/consumer 200 in 936ms
